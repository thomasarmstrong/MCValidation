% ==========================================================================
%
% Common configuration parts for some or all telescope types in prod-4.
%
% ==========================================================================

#ifndef TELESCOPE
# define TELESCOPE 0
#endif

% We fall back to single-telescope triggers and do all the stereo triggers at the
% analysis stage later-on.
trigger_telescopes = 1           % Unless an array trigger file sets up more specific triggers.
array_trigger = none             % None needed/applicable for single-telescope trigger.

#if NUM_TELESCOPES > 1
trigger_telescopes = 2
# if TELESCOPE == 0
echo Using simple stereo array trigger for now with $(NUM_TELESCOPES) telescopes to simulate.
# endif
#endif

only_triggered_telescopes=1      % Simulating non-triggered telescopes can be much more demanding on CPU use.
array_window = 1000 % ns         % The array trigger file can be more specific on this.
% ignore_telescopes=all: -1        % No telescopes ignored.

output_format = 1                % save sample mode data

% Optical system
mirror_list = none % No common mirrors. For dual-mirror none needed.

% Accuracy of the tracking and measurement of current direction.
% Pointing errors can always be mimicked at the analysis level:
telescope_random_angle         = 0.
telescope_random_error         = 0.

convergent_depth = 0             % All telescopes pointing to the same direction.

iobuf_maximum = 1000000000       % 1000 MB should be enough. We expect at most ~15M bunches * 32 byte or 500 MB.
iobuf_output_maximum = 400000000 % 400 MB. We expect at most 150*2048*4*80 (normal) or 80*11384*4*60 (sc), i.e. ~200 MB.

% Reset from compiled-in defaults to make sure telescope configs do actually set these:
discriminator_pulse_shape = none % telescope-type dependent, using 'none' would result in failing setup.
fadc_pulse_shape = none          % telescope-type dependent, using 'none' would result in failing setup.
discriminator_amplitude = 0.     % Also make sure the telescope-type dependent setup specifies amplitudes.
fadc_amplitude = 0.
fadc_pedestal = 100.
fadc_noise = 0.                % And also the noise
discriminator_threshold = 99999.
asum_threshold = 0.
asum_shaping_file = none         % No further shaping needed - assuming pulse is wide enough.
asum_offset = 0.0
dsum_threshold = 0

fadc_max_signal = 4095       % 12-bit ADC (applies to both channels unless specified)
fadc_max_sum = 16777215      % 24-bit sum is unlimited for all practical purposes.


% -------- The following default values should get superceded with telescope-type specific values. ----------

store_photoelectrons = 30        % Save individual photo-electrons if more than 30 would be registered.

% Pulse shape analysis with pulse sum around global peak
% position only for significant pixels.
% Note: negative sign means that 'global peak' pulse sums are recorded for significant pixels only.
pulse_analysis = -30             % Significant: >= 30 ADC counts difference between min and max ADC values in readout window.
% Peak bin plus 3 bins before peak and 4 after means integration over 8 bins (at 1 GHz).
sum_before_peak = 3              % May be superceded by telescope-specific setting.
sum_after_peak  = 4              % May be superceded by telescope-specific setting


% Prod-4 configuration file with site-specific parameters.

% The altitude level and the corresponding transmission are typically
% configured on the command line. So this is more a reminder of what to expect:
altitude = 2150. % m (Typically replaced on the command line).
atmospheric_transmission = atm_trans_2150_1_10_0_0_2150.dat

% Instead of setting these two values on the command line, a
% preprocessor definition could be used, either naming the site
% or specifying the altitude (which implies the transmission file to use).







